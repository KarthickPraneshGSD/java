class Node                                 // syntax for node
{
    int data;
    Node next;
    Node prev;
    Node(int data)
    {
        this.data=data;
        this.next=null;
        this.prev=null;
    }
}
class DLL
{
    Node head,tail;
    public void Insertatbegining(int data)   // insert at begining
    {
        Node newNode = new Node(data);
        if(head==null)
        {
            head=tail=newNode;
        }
        else
        {
            newNode.next=head;
            head.prev=newNode;
            head=newNode;
        }
    }
    public void Insertatend(int data)      // insert at end
    {
        Node newNode = new Node(data);
        if(tail==null)
        {
            head = tail=newNode;
        }
        else{
            tail.next=newNode;
            newNode.prev=tail;
            tail=newNode;
        }
    }
    public void display()                  //display
    {
        Node temp = head;
        if(temp==null)
        {
            System.out.print("list is empty");
        }
        while(temp!=null)
        {
            System.out.print(temp.data);
        if(temp.next!=null)
        {
            System.out.print("<->");
        }
        temp=temp.next;
    }}
}
    public class Main                         //Main function
    {
    public static void main (String[] args) 
    {
        {
            DLL doubly = new DLL();
            doubly.Insertatbegining(100);
            doubly.Insertatend(200);
            doubly.Insertatend(300);
            doubly.Insertatend(400);
            doubly.Insertatend(500);
            doubly.Insertatend(600);
            doubly.display();
        }
    }
    }

